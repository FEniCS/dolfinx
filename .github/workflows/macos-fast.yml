name: DOLFINx CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - "main"
    tags:
      - "v*"
  merge_group:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14
    strategy:
      matrix:
        config: ['default', 'petsc']
    name: Build and test (mac OS, ${{matrix.config}})
    env:
      CC: clang
      CXX: clang
      CLANG_DEFAULT_CXX_STDLIB: libc++

    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: oneapi-test-env
          environment-file: python/conda-macos-test-env.yml
          auto-activate-base: false
      - run: |
          conda info
          conda list

      - name: Install FEniCSx dependencies
        run: |
          python -m pip install git+https://github.com/FEniCS/basix.git
          python -m pip install git+https://github.com/FEniCS/ufl.git
          python -m pip install git+https://github.com/FEniCS/ffcx.git

      - name: Build and install DOLFINx C++ library
        run: |
          cmake -G Ninja -B build -S cpp/
          cmake --build build
          sudo cmake --install build

      - name: Build C++ unit tests
        run: |
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer -B build/test/ -S cpp/test/
          cmake --build build/test --parallel 3

      - name: Run C++ unit tests (serial)
        working-directory: build/test
        run: ctest -V --output-on-failure -R unittests

      - name: Run C++ unit tests (MPI)
        working-directory: build/test
        run: mpiexec -np 3 ctest -V --output-on-failure -R unittests

      - name: Build and install DOLFINx Python interface
        if: ${{ matrix.config == 'default' }}
        working-directory: python
        run: |
          python -m pip install -r ./build-requirements.txt
          python -m pip install --check-build-dependencies --no-build-isolation .

      - name: Run Python unit tests (serial)
        if: ${{ matrix.config == 'default' }}
        working-directory: python/test/unit/
        run: python -m pytest -n auto -m "not petsc4py" .

      - name: Run Python unit tests (MPI, np=3)
        if: ${{ matrix.config == 'default' }}
        working-directory: python/test/unit/
        run: mpirun -np 3 python -m pytest -m "not petsc4py" .
