name: MacOS build

on:
  push:
    branches:
      - "jhale/macos-homebrew-build"
  schedule:
    # '*' is a special character in YAML, so string must be quoted
    - cron: "0 4 * * WED"
  workflow_dispatch: ~

jobs:
  mac-os-build:
    name: MacOS Homebrew install and test
    strategy:
      matrix:
        os: [macos-12, macos-11]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Homebrew dependencies
        run: |
          brew install boost cmake hdf5-mpi open-mpi pkg-config pugixml python@3.10 xtensor # FEniCS
          brew install bison flex # PETSc
          brew list

      - name: Install minimal PETSc
        run: |
          curl -L -O http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-3.17.3.tar.gz
          mkdir petsc
          tar -xf petsc-lite-3.17.3.tar.gz -C petsc --strip-components=1
          cd petsc
          python3 ./configure \
          --with-64-bit-indices=no \
          --with-debugging=no \
          --with-fortran-bindings=no \
          --with-scalar-type=real \
          --with-shared-libraries \
          --download-metis \
          --download-ptscotch \
          --with-scalar-type=real
          make all

      - name: Create virtualenv
        run: |
          python3.10 -m venv create fenicsx
          source fenicsx/bin/activate
          echo "VIRTUAL ENV:" $VIRTUAL_ENV

      - name: Install Python dependencies
        run: |
          source fenicsx/bin/activate
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade pip
          python -m pip install numpy pybind11
          PETSC_DIR=$PWD/petsc PETSC_ARCH=arch-darwin-c-opt python -m pip install petsc4py
          python -m pip install mpi4py

      - name: Install Basix
        run: |
          source fenicsx/bin/activate
          python -m pip install git+https://github.com/FEniCS/basix.git
