name: Spack build

on:
  # Uncomment the below 'push' to trigger on push
  # push:
  #  branches:
  #    - "**"
  schedule:
    # '*' is a special character in YAML, so string must be quoted
    - cron: "0 2 * * THU"
  workflow_dispatch: ~

jobs:
  build:
    env:
      release_version: 0.3.0
    strategy:
      matrix:
        # os: [ubuntu-20.04, macos-10.15]
        os: [ubuntu-20.04]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - name: Get Spack
        uses: actions/checkout@v2
        with:
          path: ./spack
          repository: spack/spack
      - name: Build DOLFINx (C++) development version via Spack
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create cpp-main
          spack env activate cpp-main
          spack add fenics-dolfinx@main
          spack install
      - name: Build DOLFINx (C++) release version via Spack
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create cpp-release
          spack env activate cpp-release
          spack add fenics-dolfinx
          spack install

      - name: Get DOLFINx code (to access test files)
        uses: actions/checkout@v2
        with:
          ref: main
          path: ./dolfinx-main
      - name: Run a C++ test (development version)
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env activate cpp-main
          cd dolfinx-main/cpp/
          python cmake/scripts/generate-cmakefiles.py
          cd demo/poisson
          ffcx poisson.ufl
          cmake .
          export VERBOSE=1
          make -j2
          mpirun -np 2 ./demo_poisson
      - name: Get DOLFINx code (to access test files)
        uses: actions/checkout@v2
        with:
          ref: v${{ env.release_version }}
          path: ./dolfinx-release
      - name: Run a C++ test (release version)
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env activate cpp-release
          cd dolfinx-release/cpp/
          python cmake/scripts/generate-cmakefiles.py
          cd demo/poisson
          ffcx poisson.ufl
          cmake .
          export VERBOSE=1
          make -j2
          mpirun -np 2 ./demo_poisson

      - name: Build DOLFINx (Python, development)
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create py-main
          spack env activate py-main
          spack add py-fenics-dolfinx@main
          spack install
      - name: Build DOLFINx (Python, release version)
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create py-release
          spack env activate py-release
          spack add py-fenics-dolfinx
          spack install

      # NOTE: numba is installed via pip because the spack package takes
      # an extremely long time to compile
      - name: Run DOLFINx (Python, development) test
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env activate py-main
          pip install numba
          mpirun -np 2 python3 ./dolfinx-main/python/demo/stokes-taylor-hood/demo_stokes-taylor-hood.py
      - name: Run DOLFINx (Python, release) test
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env activate py-release
          pip install numba
          mpirun -np 2 python3 ./dolfinx-release/python/demo/stokes-taylor-hood/demo_stokes-taylor-hood.py
