name: Spack build

on:
  # Uncomment the below 'push' to trigger on push
  # push:
  #  branches:
  #    - "**"
  schedule:
    # '*' is a special character in YAML, so string must be quoted
    - cron: "0 2 * * THU"
  workflow_dispatch:
    inputs:
      spack_repo:
        description: "Spack repository to test"
        default: "spack/spack"
        type: string
      spack_ref:
        description: "Spack repository branch/tag to test"
        default: "develop"
        type: string

jobs:
  build:
    strategy:
      matrix:
        # os: [ubuntu-20.04, macos-10.15]
        os: [ubuntu-20.04]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      CC: gcc-10
      CXX: g++-10

    steps:
      - name: Get Spack
        if: github.event_name != 'workflow_dispatch'
        uses: actions/checkout@v3
        with:
          path: ./spack
          repository: spack/spack
      - name: Get Spack
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v3
        with:
          path: ./spack
          repository: ${{ github.event.inputs.spack_repo }}
          ref: ${{ github.event.inputs.spack_ref }}

      - name: Build DOLFINx (C++) development version via Spack
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create cpp-main
          spack env activate cpp-main
          spack add fenics-dolfinx@main+adios2
          spack install
      - name: Build DOLFINx (C++) release version via Spack
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create cpp-release
          spack env activate cpp-release
          spack add fenics-dolfinx+adios2
          spack install

      - name: Get DOLFINx code (to access test files)
        uses: actions/checkout@v3
        with:
          path: ./dolfinx-main

      - name: Run a C++ test (development version)
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env activate cpp-main
          spack install py-fenics-ffcx@main
          cd dolfinx-main/cpp/
          cd demo/poisson
          cmake .
          export VERBOSE=1
          make -j2
          mpirun -np 2 ./demo_poisson

      - name: Get DOLFINx release code (to access test files)
        uses: actions/checkout@v3
        with:
          ref: main
          # ref: v${{ github.event.inputs.spack_branch }}
          path: ./dolfinx-release
      - name: Run a C++ test (release version)
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env activate cpp-release
          spack install py-fenics-ffcx
          cd dolfinx-release/cpp/
          cd demo/poisson
          cmake .
          export VERBOSE=1
          make -j2
          mpirun -np 2 ./demo_poisson

      - name: Build DOLFINx (Python, development)
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create py-main
          spack env activate py-main
          spack add py-fenics-dolfinx@main
          spack install
      - name: Build DOLFINx (Python, release version)
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create py-release
          spack env activate py-release
          spack add py-fenics-dolfinx
          spack install

      - name: Run DOLFINx (Python, development) test
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env activate py-main
          mpirun -np 2 python3 ./dolfinx-main/python/demo/demo_elasticity.py
      - name: Run DOLFINx (Python, release) test
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env activate py-release
          mpirun -np 2 python3 ./dolfinx-release/python/demo/demo_elasticity.py
