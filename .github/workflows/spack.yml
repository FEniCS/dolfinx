name: Spack build

on:
  # Uncomment the below 'push' to trigger on push
  # push:
  #  branches:
  #    - "**"
  schedule:
    # '*' is a special character in YAML, so string must be quoted
    - cron: "0 2 * * THU"

jobs:
  build:
    strategy:
      matrix:
        # os: [ubuntu-20.04, macos-10.15]
        os: [ubuntu-20.04]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    env:
      MPLBACKEND: agg
      OPENBLAS_NUM_THREADS: 1
      OMPI_MCA_rmaps_base_oversubscribe: 1
      OMPI_MCA_plm: isolated
      OMPI_MCA_btl_vader_single_copy_mechanism: none
      OMPI_MCA_mpi_yield_when_idle: 1
      OMPI_MCA_hwloc_base_binding_policy: none

    steps:

      # grub-efi: https://github.com/actions/virtual-environments/issues/1605
      - name: Install compilers
        run: |
          sudo apt-get update
          sudo apt-get install grub-efi
          sudo update-grub
          sudo apt-get upgrade
          sudo apt-get install g++-10 gfortran-10 grub-efi
        if: matrix.os == 'ubuntu-20.04'

      - name: Get Spack
        uses: actions/checkout@v2
        with:
          path: ./spack
          repository: spack/spack

      - name: Build DOLFINx (C++) via Spack
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create cpp
          spack env activate cpp
          echo "  concretization: together" >> ./spack/var/spack/environments/cpp/spack.yaml
          spack add fenics-dolfinx@main
          spack -v install

      - name: Get DOLFINx code (to access test files)
        uses: actions/checkout@v2
        with:
          path: ./dolfinx-test

      - name: Run a C++ test via Spack
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env activate cpp
          cd dolfinx-test/cpp/
          python cmake/scripts/generate-cmakefiles.py
          cd demo/poisson
          ffcx poisson.ufl
          cmake .
          export VERBOSE=1
          make
          mpirun -np 2 ./demo_poisson

      - name: Build DOLFINx (Python) and test dependencies via Spack
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create py
          spack env activate py
          echo "  concretization: together" >> ./spack/var/spack/environments/py/spack.yaml
          spack add py-fenics-dolfinx@main
          spack add py-pip py-pytest py-pytest-xdist py-scipy
          spack install

      # NOTE: numba is installed via pip because the spack package takes
      # an extremely long time to compile
      - name: Run DOLFINx (Python) tests
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env activate py
          pip install numba
          mpirun -np 2 python3 ./dolfinx-test/python/demo/stokes-taylor-hood/demo_stokes-taylor-hood.py
