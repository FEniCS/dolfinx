name: Build wheels

# By default this action does not push to test or production PyPI.  The wheels
# are available as an artifact that can be downloaded and tested locally.

on:
  workflow_dispatch:
    inputs:
      dolfinx_ref:
        description: "dolfinx git ref to checkout"
        default: "main"
        type: string
      test_pypi_publish:
        description: "Publish to Test PyPi (true | false)"
        default: false
        type: boolean
      pypi_publish:
        description: "Publish to PyPi (true | false)"
        default: false
        type: boolean

  workflow_call:
    inputs:
      basix_ref:
        description: "dolfinx git ref to checkout"
        default: "main"
        type: string
      test_pypi_publish:
        description: "Publish to Test PyPi (true | false)"
        default: false
        type: boolean
      pypi_publish:
        description: "Publish to PyPi (true | false))"
        default: false
        type: boolean
  
  push:
    branches:
      - jhale/manylinux-docker-image

jobs:
  build_wheels:
    name: Build wheels
    runs-on: ubuntu-latest

    env:
      MPI4PY_VERSION: 3.1.2
      PETSC4PY_VERSION: 3.16.0
      CIBW_MANYLINUX_X86_64_IMAGE: docker.io/fenicsproject/wheelbuilder_x86_64:latest
      CIBW_BUILD: cp37-manylinux_x86_64 cp38-manylinux_x86_64 cp39-manylinux_x86_64
      CIBW_ENVIRONMENT: PIP_EXTRA_INDEX_URL=file:///project/simple PETSC_DIR=/usr/local

    steps:
      - name: Download mpi4py
        run: |
          curl -L -O https://github.com/mpi4py/mpi4py/releases/download/${MPI4PY_VERSION}/mpi4py-${MPI4PY_VERSION}.tar.gz
          mkdir -p mpi4py
          tar -xf mpi4py-${MPI4PY_VERSION}.tar.gz -C mpi4py --strip-components 1
      
      - uses: actions/setup-python@v2

      - name: Install Python dependencies
        run: python -m pip install cibuildwheel simple503

      - name: Build mpi4py wheels
        run: python -m cibuildwheel --output-dir wheelhouse mpi4py

      - name: Make temporary simple503 repository
        run: |
          mkdir -p simple
          mv wheelhouse/*.whl simple
          python -m simple503 --move --base-url file:///project/simple simple
      
      - name: Download petsc4py
        run: |
          curl -L -O https://pypi.io/packages/source/p/petsc4py/petsc4py-${PETSC4PY_VERSION}.tar.gz
          mkdir -p petsc4py
          tar -xf petsc4py-${PETSC4PY_VERSION}.tar.gz -C petsc4py --strip-components 1
      
      - name: Build petsc4py wheels
        run: python -m cibuildwheel --output-dir wheelhouse petsc4py
        env:
          CIBW_BEFORE_BUILD: python -m pip install numpy # Not specified correctly in petsc4py
      
      - name: Update temporary simple503 repository
        run: |
          mv wheelhouse/*.whl simple
          python -m simple503 --move --base-url file:///project/simple simple

      - name: Clone DOLFINx
        uses: actions/checkout@v2
        with:
          path: dolfinx

      - name: Build DOLFINx wheel
        run: python -m cibuildwheel --output-dir wheelhouse dolfinx/python
        env:
          CIBW_BEFORE_BUILD: python -m pip install git+https://github.com/FEniCS/basix.git && python -m pip install git+https://github.com/FEniCS/ufl.git && python -m pip install git+https://github.com/FEniCS/ffcx.git && python -m pip install mpi4py petsc4py && cmake -S dolfinx/cpp -B build-dir -DPython3_EXECUTABLE=$(which python) && cmake --build build-dir && cmake --install build-dir
      
      - name: Update temporary simple503 repository
        run: |
          mv wheelhouse/*.whl simple
          python -m simple503 --move --base-url file:///project/simple simple

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          path: simple/*
