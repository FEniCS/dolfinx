name: Build wheels

# By default this action does not push to test or production PyPI.  The wheels
# are available as an artifact that can be downloaded and tested locally.

on:
  workflow_dispatch:
    inputs:
      dolfinx_ref:
        description: "dolfinx git ref to checkout"
        default: "main"
        type: string
      test_pypi_publish:
        description: "Publish to Test PyPi (true | false)"
        default: false
        type: boolean
      pypi_publish:
        description: "Publish to PyPi (true | false)"
        default: false
        type: boolean

  workflow_call:
    inputs:
      basix_ref:
        description: "dolfinx git ref to checkout"
        default: "main"
        type: string
      test_pypi_publish:
        description: "Publish to Test PyPi (true | false)"
        default: false
        type: boolean
      pypi_publish:
        description: "Publish to PyPi (true | false))"
        default: false
        type: boolean
  
  push:
    branches:
      - jhale/manylinux-docker-image

jobs:
  build_mpi4py_wheels:
    name: Build mpi4py wheels
    runs-on: ubuntu-latest

    env:
      MPI4PY_VERSION: 3.1.2
      CIBW_MANYLINUX_X86_64_IMAGE: docker.io/fenicsproject/wheelbuilder_x86_64:latest
      CIBW_BUILD: cp37-manylinux_x86_64 cp38-manylinux_x86_64 cp39-manylinux_x86_64

    steps:
      - name: Download mpi4py
        run: |
          curl -L -O https://github.com/mpi4py/mpi4py/releases/download/${MPI4PY_VERSION}/mpi4py-${MPI4PY_VERSION}.tar.gz
          mkdir -p mpi4py
          tar -xvf mpi4py-${MPI4PY_VERSION}.tar.gz -C mpi4py --strip-components 1
      
      - uses: actions/setup-python@v2

      - name: Install Python dependencies
        run: python -m pip install cibuildwheel simple503

      - name: Build mpi4py wheel
        run: python -m cibuildwheel --output-dir wheelhouse
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
