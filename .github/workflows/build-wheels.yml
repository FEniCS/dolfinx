name: Build wheels

# By default this action does not push to test or production PyPI.  The wheels
# are available as an artifact that can be downloaded and tested locally.

on:
  workflow_dispatch:
    inputs:
      dolfinx_ref:
        description: "dolfinx git ref to checkout"
        default: "main"
        type: string
      test_pypi_publish:
        description: "Publish to Test PyPi (true | false)"
        default: false
        type: boolean
      pypi_publish:
        description: "Publish to PyPi (true | false)"
        default: false
        type: boolean

  workflow_call:
    inputs:
      basix_ref:
        description: "dolfinx git ref to checkout"
        default: "main"
        type: string
      test_pypi_publish:
        description: "Publish to Test PyPi (true | false)"
        default: false
        type: boolean
      pypi_publish:
        description: "Publish to PyPi (true | false))"
        default: false
        type: boolean

jobs:
  build_wheels:
    name: Build wheels
    runs-on: ubuntu-20.04

    env:
      #CIBW_BUILD: "cp37-manylinux_x86_64 cp38-manylinux_x86_64 cp39-manylinux_x86_64"
      #CIBW_BUILD: "cp38-manylinux_x86_64"
      CIBW_MANYLINUX_X86_64_IMAGE: "docker.io/fenicsproject/wheelbuilder_x86_64:latest"
      PETSC4PY_VERSION: 3.16.0
      MPI4PY_VERSION: 3.1.2

    steps:
      - name: Clone DOLFINx
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.dolfinx_ref }}
          path: dolfinx
      
      - name: Download mpi4py
        run: |
          wget https://github.com/mpi4py/mpi4py/releases/download/${MPI4PY_VERSION}/mpi4py-${MPI4PY_VERSION}.tar.gz
          mkdir -p mpi4py
          tar -xvf mpi4py-${MPI4PY_VERSION}.tar.gz -C mpi4py --strip-components 1

      - name: Download petsc4py
        run: |
          wget https://pypi.io/packages/source/p/petsc4py/petsc4py-${PETSC4PY_VERSION}.tar.gz
          mkdir -p petsc4py
          tar -xvf petsc4py-${PETSC4PY_VERSION}.tar.gz -C petsc4py --strip-components 1
      
      - name: Build mpi4py wheels
        uses: pypa/cibuildwheel@v2.1.2
        working-directory: mpi4py
        with:
          wheel-dir: ../wheelhouse

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl


  upload_pypi:
    name: Upload to PyPI (optional)
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        if: ${{ inputs.test_pypi_publish }}
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          repository_url: https://pypi.org/legacy/

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        if: ${{ inputs.pypi_publish }}
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
