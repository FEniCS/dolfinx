name: DOLFINx tests via Spack

on:
  # Uncomment the below 'push' to trigger on push
  push:
    branches:
      - "**"
  # pull_request:
  #   branches: [ "main" ]
  # merge_group:
  #   branches:
  #     - main
  # schedule:
  #   # '*' is a special character in YAML, so string must be quoted
  #   - cron: "0 2 * * THU"
  workflow_dispatch:

env:
  GITHUB_USER: ${{ github.actor }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  OMPI_ALLOW_RUN_AS_ROOT: 1
  OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
  PRTE_MCA_rmaps_default_mapping_policy: :oversubscribe

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    # container: spack/ubuntu-noble:latest
    container: ubuntu:24.04
    permissions:
      packages: write

    # env:
    #   PATH: /opt/spack/bin:${{ env.PATH }}
    # env:
    #   dolfinx_ref: main
    #   # bench_dolfinx_ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
    # strategy:
    #   matrix:
    #     backend:
    #       [
    #         { device: cpu,  spack_opt: "~cuda~rocm", cmake_opt: "" },
    #         { device: rocm, spack_opt: "++rocm amdgpu_target=gfx90a ^openmpi+rocm amdgpu_target=gfx90a", cmake_opt: -DHIP_ARCH=gfx90a },
    #         { device: cuda, spack_opt: "++cuda cuda_arch=75 ^openmpi", cmake_opt: -DCUDA_ARCH=75 },
    #       ]

    steps:
      - name: Install Spack requirements
        run: |
          apt-get -y update
          apt-get install -y bzip2 curl file git gzip make patch python3-minimal tar unzip xz-utils
          apt-get install -y g++ gfortran  # compilers

      - name: Get DOLFINx code
        uses: actions/checkout@v5
        with:
          path: dolfinx-src
      - name: Get Spack
        uses: actions/checkout@v5
        with:
          repository: spack/spack
          # ref: develop
          path: spack-src

      - name: Get Spack packages
        uses: actions/checkout@v5
        with:
          repository: garth-wells/spack-packages
          ref: py-dolfinx-c-compiler
          path: spack-packages

      - name: Add repo and build cache
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack repo set --destination $GITHUB_WORKSPACE/spack-packages builtin
          spack mirror add --unsigned --type binary --oci-username-variable GITHUB_USER --oci-password-variable GITHUB_TOKEN \
            local-buildcache oci://ghcr.io/fenics/spack-dolfinx-ci-buildcache
          spack mirror ls

      - name: Build DOLFINx library (C++)
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack env create cxx
          spack -e cxx mirror ls
          spack -e cxx buildcache list --allarch
          spack -e cxx develop --no-clone --path $GITHUB_WORKSPACE/dolfinx-src fenics-dolfinx@main
          spack -e cxx add fenics-dolfinx@main +petsc +slepc partitioners=parmetis \
            %petsc +mpi +hypre +mumps +superlu-dist \
            %openmpi %fenics-basix@git.main=main %fenics-ufcx@git.main=main
          spack -e cxx add catch2 cmake ninja \
            py-fenics-ffcx@git.main=main %py-fenics-basix@git.main=main %py-fenics-ufl@git.main=main
          spack -e cxx install -j 3 -p 2 --use-buildcache auto

      - name: Push C++ packages to cache
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack -e cxx buildcache push --base-image ubuntu:24.04 --only dependencies --with-build-dependencies --update-index local-buildcache
          spack -e cxx buildcache push --base-image ubuntu:24.04 --update-index local-buildcache catch2 cmake ninja
        if: ${{ !cancelled() }}

      # - name: Build and run unit tests (C++)
      #   run: |
      #     . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
      #     spack env activate cxx
      #     cmake -Werror=dev --warn-uninitialized -G Ninja -DCMAKE_BUILD_TYPE=Developer -B build/test/ -S dolfinx-src/cpp/test/
      #     cmake --build build/test
      #     cd build/test
      #     ctest -V --output-on-failure -R unittests
      #     mpirun -n 3 ctest -V --output-on-failure -R unittests

      - name: Build and run demos (C++)
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack env activate cxx
          cmake -Werror=dev --warn-uninitialized -G Ninja -DCMAKE_BUILD_TYPE=Developer -B build/demo/ -S dolfinx-src/cpp/demo/
          cmake --build build/demo
          cd build/demo
          ctest -V -R demo -R serial
          ctest --output-on-failure -V -R demo -R mpi_2

      - name: Build DOLFINx library (Python)
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack config get repos
          spack info py-fenics-dolfinx
          spack env create py dolfinx-src/.github/workflows/spack-config/gh-actions-env-test.yml
          spack -e py develop --no-clone --path $GITHUB_WORKSPACE/dolfinx-src fenics-dolfinx@main
          spack -e py develop --no-clone --path $GITHUB_WORKSPACE/dolfinx-src py-fenics-dolfinx@main
          spack -e py add py-fenics-dolfinx@main +petsc4py +slepc4py \
            %fenics-dolfinx@main +petsc +slepc partitioners=parmetis \
            %fenics-basix@git.main=main  \
            %py-fenics-basix@git.main=main  \
            %py-fenics-ffcx@git.main=main \
            %py-fenics-ufl@git.main=main \
            ^openmpi ^fenics-ufcx@git.main=main \
            ^petsc +mpi +hypre +mumps +superlu-dist \
          spack -e py add py-pytest py-pytest-xdist py-matplotlib \
            py-numba py-gmsh %gmsh~fltk py-scipy
          spack -v -e py install -j 4 --use-buildcache auto

      - name: Run unit tests (Python)
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack env activate py
          python -m pytest -n=auto --durations=50 dolfinx-src/python/test/unit/

      - name: Push packages to cache and update index
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack -e py buildcache push --base-image ubuntu:24.04 --only dependencies --with-build-dependencies --update-index local-buildcache
          spack -e py buildcache push --base-image ubuntu:24.04 --update-index local-buildcache py-pytest py-pytest-xdist py-matplotlib py-numba py-gmsh py-scipy
        if: ${{ !cancelled() }}
