name: DOLFINx tests via Spack (experimental)

on:
  # Uncomment the below 'push' to trigger on push
  push:
    branches:
      - "**"
  # pull_request:
  #   branches: [ "main" ]
  # merge_group:
  #   branches:
  #     - main
  # schedule:
  #   # '*' is a special character in YAML, so string must be quoted
  #   - cron: "0 2 * * THU"
  workflow_dispatch:

env:
  GITHUB_USER: ${{ github.actor }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  OMPI_ALLOW_RUN_AS_ROOT: 1
  OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
  PRTE_MCA_rmaps_default_mapping_policy: :oversubscribe

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    container: ubuntu:24.04
    permissions:
      packages: write

    steps:
      - name: Install Spack requirements
        run: |
          apt-get -y update
          apt-get install -y bzip2 curl file git gzip make patch python3-minimal \
            tar unzip xz-utils g++ gcc gfortran
          apt-get install -y llvm-15-dev

      - name: Get DOLFINx code
        uses: actions/checkout@v5
        with:
          path: dolfinx-src
      - name: Get Spack
        uses: actions/checkout@v5
        with:
          repository: spack/spack
          ref: develop
          path: spack-src

      - name: Get Spack packages
        uses: actions/checkout@v5
        with:
          repository: garth-wells/spack-packages
          ref: py-dolfinx-c-compiler
          path: spack-packages

      - name: Add repo
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack repo set --destination $GITHUB_WORKSPACE/spack-packages builtin

      - name: Prepare C++ environment
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack info fenics-dolfinx
          spack env create cxx dolfinx-src/.github/workflows/spack-config/gh-actions-env-test.yml
          spack -e cxx develop fenics-dolfinx
          spack -e cxx develop fenics-basix
          spack -e cxx develop fenics-ufcx
          spack -e cxx develop py-fenics-basix
          spack -e cxx develop py-fenics-ffcx
          spack -e cxx develop py-fenics-ufl

      - name: Build library (C++)
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack -e cxx add fenics-dolfinx@main generator=ninja build_type=Developer +petsc +slepc partitioners=parmetis \
            %petsc +mpi +hypre +mumps +superlu-dist %openmpi %adios2~fortran~libcatalyst %cmake~ncurses
          spack -e cxx add catch2 py-fenics-ffcx@main
          spack -e cxx concretize -j 4
          spack -e cxx install -j 4 -p 2 --use-buildcache auto

      - name: Push C++ packages to cache
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack -e cxx buildcache push --base-image ubuntu:24.04 --only dependencies --with-build-dependencies --update-index local-buildcache
          spack -e cxx buildcache push --base-image ubuntu:24.04 --update-index local-buildcache catch2 ninja
        if: ${{ !cancelled() }}

      - name: Build and run C++ unit tests
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack env activate cxx
          spack load catch2 cmake ninja py-fenics-ffcx
          cmake -Werror=dev --warn-uninitialized -G Ninja -DCMAKE_BUILD_TYPE=Developer -B build/test/ -S dolfinx-src/cpp/test/
          cmake --build build/test
          cd build/test
          ctest -V --output-on-failure -R unittests
          mpirun -n 3 ctest -V --output-on-failure -R unittests

      - name: Build and run C++ demos
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack env activate cxx
          spack load cmake ninja py-fenics-ffcx
          cmake -Werror=dev --warn-uninitialized -G Ninja -DCMAKE_BUILD_TYPE=Developer -B build/demo/ -S dolfinx-src/cpp/demo/
          cmake --build build/demo
          cd build/demo
          ctest -V -R demo -R serial
          ctest --output-on-failure -V -R demo -R mpi_2

      - name: Prepare Python environment
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack info py-fenics-dolfinx
          spack env create py dolfinx-src/.github/workflows/spack-config/gh-actions-env-test.yml
          spack -e py develop --path $GITHUB_WORKSPACE/dolfinx-src fenics-dolfinx
          spack -e py develop fenics-basix
          spack -e py develop fenics-ufcx
          spack -e py develop --path $GITHUB_WORKSPACE/dolfinx-src py-fenics-dolfinx
          spack -e py develop py-fenics-basix
          spack -e py develop py-fenics-ffcx
          spack -e py develop py-fenics-ufl

      - name: Build library (Python)
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack -e py add py-fenics-dolfinx@main +petsc4py +slepc4py \
            %fenics-dolfinx@main build_type=Developer +petsc +slepc partitioners=parmetis \
            ^openmpi \
            ^petsc +mpi +hypre +mumps +superlu-dist \
            ^adios2~fortran~libcatalyst
          spack -e py add py-gmsh %gmsh~fltk py-matplotlib py-numba py-pyamg \
            py-pytest py-pytest-xdist py-scipy py-pyvista
          spack -v -e py install --fresh -j 4 -p 2 --use-buildcache=auto

      - name: Run Python demos
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack env activate py
          python -m pytest -m serial --durations=10 dolfinx-src/python/demo/test.py
          python -m pytest -m mpi --num-proc=3 dolfinx-src/python/demo/test.py

      - name: Run Python unit tests
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack env activate py
          spack load gcc
          python -m pytest -n=auto --durations=50 dolfinx-src/python/test/unit/
          mpirun -np 3 python -m pytest --durations=50 dolfinx-src/python/test/unit/

      - name: Push packages to cache and update index
        run: |
          . $GITHUB_WORKSPACE/spack-src/share/spack/setup-env.sh
          spack -e py buildcache push --base-image ubuntu:24.04 --only dependencies --with-build-dependencies --update-index local-buildcache
          spack -e py buildcache push --base-image ubuntu:24.04 --update-index local-buildcache py-pytest py-pytest-xdist py-matplotlib py-numba py-gmsh py-scipy
        if: ${{ !cancelled() }}
