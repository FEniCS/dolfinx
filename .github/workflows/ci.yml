name: DOLFINx tests via Spack

on:
  # Uncomment the below 'push' to trigger on push
  push:
    branches:
      - "**"
  # pull_request:
  #   branches: [ "main" ]
  # merge_group:
  #   branches:
  #     - main
  # schedule:
  #   # '*' is a special character in YAML, so string must be quoted
  #   - cron: "0 2 * * THU"
  workflow_dispatch:

env:
  GITHUB_USER: ${{ github.actor }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    container: spack/ubuntu-noble:latest
    permissions:
      packages: write

    # env:
    #   PATH: /opt/spack/bin:${{ env.PATH }}
    # env:
    #   dolfinx_ref: main
    #   # bench_dolfinx_ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
    # strategy:
    #   matrix:
    #     backend:
    #       [
    #         { device: cpu,  spack_opt: "~cuda~rocm", cmake_opt: "" },
    #         { device: rocm, spack_opt: "++rocm amdgpu_target=gfx90a ^openmpi+rocm amdgpu_target=gfx90a", cmake_opt: -DHIP_ARCH=gfx90a },
    #         { device: cuda, spack_opt: "++cuda cuda_arch=75 ^openmpi", cmake_opt: -DCUDA_ARCH=75 },
    #       ]

    steps:
      - uses: actions/checkout@v5
        with:
          path: dolfinx-src

      - name: Add Spack to $PATH
        run: echo "PATH=/opt/spack/bin:$PATH" >> $GITHUB_ENV

      - name: Add cache and create environment
        run: |
          echo $PATH
          spack mirror add --unsigned --type binary --oci-username-variable GITHUB_USER --oci-password-variable GITHUB_TOKEN local-buildcache oci://ghcr.io/fenics/spack-buildcache

      - name: Caching
        run: |
          spack env create tmp-cache
          spack -e tmp-cache install -j 4 --use-buildcache auto --add cmake catch2 ninja
          spack -e tmp-cache buildcache push --base-image spack/ubuntu-noble --update-index local-buildcache

      - name: Point Spack to DOLFINx source code
        run: |
          spack env create cxx
          spack -e cxx develop --no-clone --path $GITHUB_WORKSPACE/dolfinx-src fenics-dolfinx@main

      - name: Build DOLFINx
        run: |
          spack -e cxx add fenics-dolfinx@main +petsc +slepc partitioners=parmetis \
            %petsc +mpi +hypre +mumps +superlu-dist \
            %openmpi %fenics-basix@git.main=main %fenics-ufcx@git.main=main
          spack -e cxx add cmake catch2 ninja py-fenics-ffcx@git.main=main

      - name: Build C++ library
        run: |
          spack -e cxx install -j 4 --use-buildcache auto

      - name: Build and run unit tests
        run: |
          . /opt/spack/share/spack/setup-env.sh
          spack env activate cxx
          cmake -Werror=dev --warn-uninitialized -G Ninja -DCMAKE_BUILD_TYPE=Developer -B build/test/ -S cpp/test/
          cmake --build build/test
          cd build/test
          ctest -V --output-on-failure -R unittests
          mpirun -n 3 ctest -V --output-on-failure -R unittests

      - name: Push packages (cpp) to cache and update index
        run: |
          spack -e cxx buildcache push --only dependencies --with-build-dependencies \
            --base-image spack/ubuntu-noble --update-index local-buildcache
        if: ${{ !cancelled() }}
