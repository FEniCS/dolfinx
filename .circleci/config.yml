version: 2.1

install-python-components: &install-python-components
  name: Install FEniCS Python components
  command: |
    pip3 install git+https://github.com/FEniCS/fiat.git --upgrade
    pip3 install git+https://github.com/FEniCS/ufl.git --upgrade
    pip3 install git+https://github.com/FEniCS/ffcx.git --upgrade
    rm -rf /usr/local/include/dolfin /usr/local/include/dolfin.h

flake8-python-code: &flake8-python-code
  name: Flake8 checks on Python code
  command: |
    cd python/
    python3 -m flake8 dolfinx
    python3 -m flake8 dolfinx_utils
    python3 -m flake8 demo
    python3 -m flake8 test

build-documentation-cpp: &build-documentation-cpp
  name: Build documentation (C++)
  command: cd cpp/doc && doxygen

configure-cpp: &configure-cpp
  name: Configure (C++)
  command: mkdir -p build && cd build && cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer ../cpp/

build-install-cpp: &build-install-cpp
  name: Build and install (C++)
  command: cd build && ninja -j3 install

unit-tests-cpp: &unit-tests-cpp
  name: Build and run C++ unit tests (serial and MPI)
  command: |
    cd build/test/unit
    cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer .
    ninja -j3
    ctest --output-on-failure -R unittests
    mpirun -np 3 ctest --output-on-failure -R unittests

regression-tests-cpp: &regression-tests-cpp
  name: Build and run C++ regressions tests (serial)
  command: |
    cd build/demo
    cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer .
    ninja -j3
    ctest -j3 -R demo -R serial

regression-tests-cpp-mpi: &regression-tests-cpp-mpi
  name: Run C++ regression tests (MPI)
  command: |
    cd build/demo
    cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer .
    ninja -j3
    ctest --verbose -R demo -R mpi_3

build-python-interface: &build-python-interface
  name: Build Python/pybind11 interface
  command: |
    cd python
    pip3 -v install . --user

build-documentation-python: &build-documentation-python
  name: Build documentation (Python)
  command: |
    cd python/demo && python3 ./generate-demo-files.py
    cd ../doc && make html

unit-tests-python: &unit-tests-python
  name: Run unit tests (Python, serial)
  environment:
    DOLFINX_JIT_CFLAGS: -g0 -O0
  command: |
    mkdir -p ~/junit
    cd python/test/unit
    python3 -m pytest -n=4 --durations=50 --junitxml=~/junit/test-results.xml .

unit-tests-python-mpi: &unit-tests-python-mpi
  name: Run unit tests (Python, MPI)
  environment:
    DOLFINX_JIT_CFLAGS: -g0 -O0
  command: |
    cd python/test/unit
    mpirun -np 3 python3 -m pytest .

demos-python: &demos-python
  name: Run demos (Python, serial)
  environment:
    DOLFINX_JIT_CFLAGS: -g0 -O2
  command: |
    mkdir -p ~/junit
    cd python/demo
    python3 ./generate-demo-files.py
    python3 -m pytest -n=4 -v -m serial --durations=10 --junitxml=~/junit/demo-results.xml test.py

demos-python-mpi: &demos-python-mpi
  name: Run demos (Python, MPI)
  environment:
    DOLFINX_JIT_CFLAGS: -g0 -O2
  command: |
    cd python/demo
    python3 ./generate-demo-files.py
    python3 -m pytest -n=2 -v -m mpi test.py --num-proc=3

jobs:
  build-real:
    docker:
      - image: fenicsproject/test-env:mpich
    environment:
      MPLBACKEND: "agg"
      DEBIAN_FRONTEND: "noninteractive"
      PETSC_ARCH: "linux-gnu-real-32"
    steps:
      - checkout
      - run: *install-python-components
      - run: *flake8-python-code
      - run: *build-documentation-cpp
      - run: *configure-cpp
      - run: *build-install-cpp

      - run: *unit-tests-cpp
      - run: *regression-tests-cpp
      - run: *regression-tests-cpp-mpi

      - run: *build-python-interface
      - run: *build-documentation-python

      - run: *unit-tests-python
      - run: *unit-tests-python-mpi
      - run: *demos-python
      - run: *demos-python-mpi
      - persist_to_workspace:
          root: .
          paths:
            - python/doc/build/html/
            - cpp/doc/html/
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

  build-complex:
    docker:
        - image: fenicsproject/test-env:mpich
    environment:
      MPLBACKEND: "agg"
      DEBIAN_FRONTEND: "noninteractive"
      PETSC_ARCH: "linux-gnu-complex-32"
    steps:
      - checkout
      - run: *install-python-components
      - run: *flake8-python-code
      - run: *build-documentation-cpp
      - run: *configure-cpp
      - run: *build-install-cpp

      - run: *unit-tests-cpp
      - run: *regression-tests-cpp
      - run: *regression-tests-cpp-mpi

      - run: *build-python-interface
      - run: *build-documentation-python
      - run: *unit-tests-python
      - run: *unit-tests-python-mpi
      - run: *demos-python
      - run: *demos-python-mpi
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

workflows:
  version: 2
  build:
    jobs:
      - build-real
      - build-complex
