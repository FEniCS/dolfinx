install-python-components: &install-python-components
  name: Install FEniCS Python components
  command: |
            pip3 install git+https://github.com/FEniCS/fiat.git --upgrade
            pip3 install git+https://github.com/FEniCS/ufl.git --upgrade
            pip3 install git+https://github.com/FEniCS/ffcx.git --upgrade
            rm -rf /usr/local/include/dolfin /usr/local/include/dolfin.h

flake8-python-code: &flake8-python-code
  name: Flake8 checks on Python code
  command: |
            python3 -m flake8 python/dolfin
            python3 -m flake8 python/dolfin_utils
            python3 -m flake8 python/demo
            python3 -m flake8 python/test

build-documentation-cpp: &build-documentation-cpp
  name: Build documentation (C++)
  command: cd cpp/doc && doxygen

configure-cpp: &configure-cpp
  name: Configure (C++)
  command: mkdir -p build && cd build && cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer ../cpp/

build-install-cpp: &build-install-cpp
  name: Build and install (C++)
  command: cd build && ninja -j3 install

unit-tests-cpp: &unit-tests-cpp
  name: Build and run C++ unit tests (serial and MPI)
  command: |
    cd build
    ninja -j3 unittests
    ctest -R unittests
    mpirun -np 3 ctest -R unittests

regression-tests-cpp: &regression-tests-cpp
  name: Build and run C++ regressions tests (serial)
  command: |
    cd build
    ninja -j3 demos
    ctest -j3 -R demo -R serial

regression-tests-cpp-mpi: &regression-tests-cpp-mpi
  name: Run C++ regression tests (MPI)
  command: |
    cd build
    ninja -j3 demos
    ctest --verbose -R demo -R mpi

build-python-interface: &build-python-interface
  name: Build Python/pybind11 interface
  command: |
    cd python
    pip3 -v install . --user

build-documentation-python: &build-documentation-python
  name: Build documentation (Python)
  command: |
    cd python/demo && python3 ./generate-demo-files.py
    cd ../doc && make html

unit-tests-python: &unit-tests-python
  name: Run unit tests (Python, serial)
  command: |
    mkdir -p ~/junit
    cd python/test/unit
    python3 -m pytest -n3 --durations=50 --junitxml=~/junit/test-results.xml .

unit-tests-python-mpi: &unit-tests-python-mpi
  name: Run unit tests (Python, MPI)
  command: |
    cd python/test/unit
    mpirun -n 3 python3 -m pytest .

demos-python: &demos-python
  name: Run demos (Python, serial)
  command: |
    mkdir -p ~/junit
    cd python/demo
    python3 ./generate-demo-files.py
    python3 -m pytest --durations=10 --junitxml=~/junit/demo-results.xml -n3 -v -m serial test.py

demos-python-mpi: &demos-python-mpi
  name: Run demos (Python, MPI)
  command: |
    cd python/demo
    python3 ./generate-demo-files.py
    python3 -m pytest -n2 -v -m mpi test.py --num-proc=3

version: 2

jobs:
  build-real:
    docker:
      - image: quay.io/fenicsproject/dolfinx:dev-env-real
    environment:
      MPLBACKEND: "agg"
      DEBIAN_FRONTEND: "noninteractive"
    steps:
      - checkout
      - run: *install-python-components
      - run: *flake8-python-code
      - run: *build-documentation-cpp
      - run: *configure-cpp
      - run: *build-install-cpp

      - run: *unit-tests-cpp
      - run: *regression-tests-cpp
      - run: *regression-tests-cpp-mpi

      - run: *build-python-interface
      - run: *build-documentation-python

      - run: *unit-tests-python
      - run: *unit-tests-python-mpi
      - run: *demos-python
      - run: *demos-python-mpi
      - persist_to_workspace:
          root: .
          paths:
            - python/doc/build/html/
            - cpp/doc/html/
      - store_test_results:
         path: ~/junit
      - store_artifacts:
         path: ~/junit

  build-complex:
    docker:
      - image: quay.io/fenicsproject/dolfinx:dev-env-complex
    environment:
      MPLBACKEND: "agg"
      DEBIAN_FRONTEND: "noninteractive"
    steps:
      - checkout
      - run: *install-python-components
      - run: *flake8-python-code
      - run: *build-documentation-cpp
      - run: *configure-cpp
      - run: *build-install-cpp

      - run: *unit-tests-cpp
      - run: *regression-tests-cpp
      - run: *regression-tests-cpp-mpi

      - run: *build-python-interface
      - run: *build-documentation-python
      - run: *unit-tests-python
      - run: *unit-tests-python-mpi
      - run: *demos-python
      - run: *demos-python-mpi
      - store_test_results:
         path: ~/junit
      - store_artifacts:
         path: ~/junit

  pushdoc:
    docker:
      - image: circleci/python
    working_directory: /tmp
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Establish authenticity of fenicsproject.org
          command: mkdir ~/.ssh && echo "fenicsproject.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFbD134YcxSNaHVyio0XPAvJYh8SF90xp/ARqfrbAwOmJaEPTl5CNXm6f3+Sy0k1QTp+j9WawiJON+4/FWQBTD4=" >> ~/.ssh/known_hosts
      - run:
          name: Push Python API doc to fenicsproject.org
          command: cd /tmp/python/doc/build/html && scp -r * docs@fenicsproject.org:/var/www/vhosts/fenicsproject.org/docs/dolfinx/dev/python/
      - run:
          name: Push C++ API doc to fenicsproject.org
          command: cd /tmp/cpp/doc/html && scp -r * docs@fenicsproject.org:/var/www/vhosts/fenicsproject.org/docs/dolfinx/dev/cpp/

  build-and-push-docker-images:
    docker:
      - image: docker:18.09-git
    steps:
      - setup_remote_docker:
          version: 18.09.3
      - checkout
      - run:
          name: Login to quay.io
          command: echo ${QUAYIO_TOKEN} | docker login -u ${QUAYIO_USERNAME} --password-stdin quay.io
      - run:
          name: Build base Docker image
          command: docker build --build-arg MAKEFLAGS='-j3' --target base .
      - run:
          name: Build and push dev-env-real Docker image tag dev-env-real
          command: docker build --build-arg MAKEFLAGS='-j3' --target dev-env-real -t quay.io/fenicsproject/dolfinx:dev-env-real . && docker push quay.io/fenicsproject/dolfinx:dev-env-real
      - run:
          name: Build and push dev-env-complex Docker image tag dev-env-complex
          command: docker build --build-arg MAKEFLAGS='-j3' --target dev-env-complex -t quay.io/fenicsproject/dolfinx:dev-env-complex . && docker push quay.io/fenicsproject/dolfinx:dev-env-complex
      - run:
          name: Build and push real Docker image tags latest, real
          command: docker build --build-arg MAKEFLAGS='-j3' --build-arg PETSC_SLEPC_OPTFLAGS='-O3' --build-arg PETSC_SLEPC_DEBUGGING='0' --target real -t quay.io/fenicsproject/dolfinx:latest . && docker tag quay.io/fenicsproject/dolfinx:latest quay.io/fenicsproject/dolfinx:real && docker push quay.io/fenicsproject/dolfinx:latest && docker push quay.io/fenicsproject/dolfinx:real
      - run:
          name: Build and push complex Docker image tag complex
          command: docker build --build-arg MAKEFLAGS='-j3' --build-arg PETSC_SLEPC_OPTFLAGS='-O3' --build-arg PETSC_SLEPC_DEBUGGING='0' --target complex -t quay.io/fenicsproject/dolfinx:complex . && docker push quay.io/fenicsproject/dolfinx:complex
      - run:
          name: Build and push real notebook Docker image tag notebook
          command: docker build --build-arg MAKEFLAGS='-j3' --build-arg PETSC_SLEPC_OPTFLAGS='-O3' --build-arg PETSC_SLEPC_DEBUGGING='0' --target notebook -t quay.io/fenicsproject/dolfinx:notebook . && docker push quay.io/fenicsproject/dolfinx:notebook
      - run:
          name: Build and push complex notebook Docker image tag notebook-complex
          command: docker build --build-arg MAKEFLAGS='-j3' --build-arg PETSC_SLEPC_OPTFLAGS='-O3' --build-arg PETSC_SLEPC_DEBUGGING='0' --target notebook-complex -t quay.io/fenicsproject/dolfinx:notebook-complex . && docker push quay.io/fenicsproject/dolfinx:notebook-complex
      - run:
          name: Build and push real lab Docker image tag lab
          command: docker build --build-arg MAKEFLAGS='-j3' --build-arg PETSC_SLEPC_OPTFLAGS='-O3' --build-arg PETSC_SLEPC_DEBUGGING='0' --target lab -t quay.io/fenicsproject/dolfinx:lab . && docker push quay.io/fenicsproject/dolfinx:lab
      - run:
          name: Build and push complex lab Docker image tag lab-complex
          command: docker build --build-arg MAKEFLAGS='-j3' --build-arg PETSC_SLEPC_OPTFLAGS='-O3' --build-arg PETSC_SLEPC_DEBUGGING='0' --target lab-complex -t quay.io/fenicsproject/dolfinx:lab-complex . && docker push quay.io/fenicsproject/dolfinx:lab-complex
workflows:
  version: 2
  build-and-pushdoc:
    jobs:
      - build-real
      - build-complex
      - pushdoc:
          requires:
            - build-real
          filters:
            branches:
              only:
                - master

  biweekly:
    triggers:
      - schedule:
          cron: "0 0 * * 0,3"
          filters:
            branches:
              only:
                - master
    jobs:
      - build-and-push-docker-images:
          context: quay.io
